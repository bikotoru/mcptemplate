/**
 * Página de detalle de {{ ENTITY_NAME }} - App Router
 * Vista detallada de un {{ ENTITY_NAME_LOWER }} específico
 * Generado automáticamente por MCP CRUD Generator
 * Timestamp: {{ TIMESTAMP }}
 */

'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { use{{ ENTITY_NAME }} } from '../../../../hooks/use{{ ENTITY_NAME }}';
import Link from 'next/link';
import { ArrowLeftIcon, PencilIcon, TrashIcon } from '@heroicons/react/24/outline';

interface {{ ENTITY_NAME }}DetailPageProps {
  params: {
    id: string;
  };
}

export default function {{ ENTITY_NAME }}DetailPage({ params }: {{ ENTITY_NAME }}DetailPageProps) {
  const { id } = params;
  const router = useRouter();
  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);
  const [isDeleting, setIsDeleting] = useState(false);

  const {
    {{ ENTITY_NAME_LOWER }},
    loading,
    error,
    delete{{ ENTITY_NAME }}
  } = use{{ ENTITY_NAME }}({ id });

  const handleDelete = async () => {
    try {
      setIsDeleting(true);
      await delete{{ ENTITY_NAME }}(id);
      router.push('/{{ ENTITY_NAME_PLURAL_LOWER }}');
    } catch (error) {
      console.error('Error deleting {{ ENTITY_NAME_LOWER }}:', error);
    } finally {
      setIsDeleting(false);
      setShowDeleteConfirm(false);
    }
  };

  if (loading) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <div className="animate-pulse">
            <div className="h-8 bg-gray-200 rounded w-1/3 mb-4"></div>
            <div className="space-y-3">
              <div className="h-4 bg-gray-200 rounded w-full"></div>
              <div className="h-4 bg-gray-200 rounded w-5/6"></div>
              <div className="h-4 bg-gray-200 rounded w-4/6"></div>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (error || !{{ ENTITY_NAME_LOWER }}) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 text-center">
          <div className="text-red-600 mb-2">
            {error || '{{ ENTITY_NAME }} no encontrado'}
          </div>
          <Link
            href="/{{ ENTITY_NAME_PLURAL_LOWER }}"
            className="text-blue-600 hover:text-blue-800 font-medium"
          >
            Volver a {{ ENTITY_NAME_PLURAL }}
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      {/* Header */}
      <div className="mb-6">
        <div className="flex items-center gap-4 mb-4">
          <Link
            href="/{{ ENTITY_NAME_PLURAL_LOWER }}"
            className="flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors"
          >
            <ArrowLeftIcon className="h-5 w-5" />
            Volver a {{ ENTITY_NAME_PLURAL }}
          </Link>
        </div>
        
        <div className="flex justify-between items-start">
          <div>
            <h1 className="text-3xl font-bold text-gray-900">
              {% for field in FIELDS %}
              {% if field.name == 'name' %}
              {{ ENTITY_NAME_LOWER }}.{{ field.name }}
              {% elif field.name == 'title' %}
              {{ ENTITY_NAME_LOWER }}.{{ field.name }}
              {% elif field.name == 'email' %}
              {{ ENTITY_NAME_LOWER }}.{{ field.name }}
              {% endif %}
              {% endfor %}
              {% if not (FIELDS|selectattr('name', 'in', ['name', 'title', 'email'])|list) %}
              {{ ENTITY_NAME }} #{{ ENTITY_NAME_LOWER }}.id
              {% endif %}
            </h1>
            <p className="text-gray-600 mt-1">
              Detalles del {{ ENTITY_NAME_LOWER }}
            </p>
          </div>

          <div className="flex items-center gap-2">
            {% if PERMISSIONS.update %}
            <Link
              href={`/{{ ENTITY_NAME_PLURAL_LOWER }}/${id}/edit`}
              className="flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
            >
              <PencilIcon className="h-4 w-4" />
              Editar
            </Link>
            {% endif %}

            {% if PERMISSIONS.delete %}
            <button
              onClick={() => setShowDeleteConfirm(true)}
              className="flex items-center gap-2 bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
            >
              <TrashIcon className="h-4 w-4" />
              Eliminar
            </button>
            {% endif %}
          </div>
        </div>
      </div>

      {/* Content */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
        <div className="p-6">
          <dl className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {% for field in FIELDS %}
            <div>
              <dt className="text-sm font-medium text-gray-500 mb-1">
                {{ field.label }}
              </dt>
              <dd className="text-base text-gray-900">
                {% if field.type == 'boolean' %}
                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                  {{ ENTITY_NAME_LOWER }}.{{ field.name }} 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-red-100 text-red-800'
                }`}>
                  {{ ENTITY_NAME_LOWER }}.{{ field.name }} ? 'Sí' : 'No'
                </span>
                {% elif field.type == 'date' %}
                {{ ENTITY_NAME_LOWER }}.{{ field.name }} ? new Date({{ ENTITY_NAME_LOWER }}.{{ field.name }}).toLocaleDateString() : '-'
                {% elif field.type == 'email' %}
                <a 
                  href={`mailto:${ {{ ENTITY_NAME_LOWER }}.{{ field.name }} }`}
                  className="text-blue-600 hover:text-blue-800"
                >
                  {{ ENTITY_NAME_LOWER }}.{{ field.name }}
                </a>
                {% elif field.type == 'url' %}
                <a 
                  href={ {{ ENTITY_NAME_LOWER }}.{{ field.name }} }
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-blue-600 hover:text-blue-800"
                >
                  {{ ENTITY_NAME_LOWER }}.{{ field.name }}
                </a>
                {% elif field.type == 'number' %}
                { {{ ENTITY_NAME_LOWER }}.{{ field.name }}?.toLocaleString() || '-' }
                {% elif field.type == 'textarea' %}
                <div className="whitespace-pre-wrap">
                  { {{ ENTITY_NAME_LOWER }}.{{ field.name }} || '-' }
                </div>
                {% elif field.type == 'relation' %}
                {% if field.relation.multiple %}
                <div className="flex flex-wrap gap-1">
                  { {{ ENTITY_NAME_LOWER }}.{{ field.name }}?.map((item: any) => (
                    <span
                      key={item.{{ field.relation.valueField }}}
                      className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800"
                    >
                      {item.{{ field.relation.displayField }}}
                    </span>
                  )) || '-'}
                </div>
                {% else %}
                { {{ ENTITY_NAME_LOWER }}.{{ field.name }}?.{{ field.relation.displayField }} || '-' }
                {% endif %}
                {% else %}
                { {{ ENTITY_NAME_LOWER }}.{{ field.name }} || '-' }
                {% endif %}
              </dd>
            </div>
            {% endfor %}

            {/* Metadata */}
            <div>
              <dt className="text-sm font-medium text-gray-500 mb-1">
                Fecha de creación
              </dt>
              <dd className="text-base text-gray-900">
                { {{ ENTITY_NAME_LOWER }}.createdAt ? new Date({{ ENTITY_NAME_LOWER }}.createdAt).toLocaleString() : '-' }
              </dd>
            </div>

            <div>
              <dt className="text-sm font-medium text-gray-500 mb-1">
                Última actualización
              </dt>
              <dd className="text-base text-gray-900">
                { {{ ENTITY_NAME_LOWER }}.updatedAt ? new Date({{ ENTITY_NAME_LOWER }}.updatedAt).toLocaleString() : '-' }
              </dd>
            </div>
          </dl>
        </div>
      </div>

      {/* Delete Confirmation Modal */}
      {showDeleteConfirm && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 max-w-md w-full mx-4">
            <h3 className="text-lg font-medium text-gray-900 mb-4">
              Confirmar eliminación
            </h3>
            <p className="text-gray-600 mb-6">
              ¿Estás seguro de que quieres eliminar este {{ ENTITY_NAME_LOWER }}? Esta acción no se puede deshacer.
            </p>
            <div className="flex justify-end gap-3">
              <button
                onClick={() => setShowDeleteConfirm(false)}
                disabled={isDeleting}
                className="px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg font-medium transition-colors disabled:opacity-50"
              >
                Cancelar
              </button>
              <button
                onClick={handleDelete}
                disabled={isDeleting}
                className="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg font-medium transition-colors disabled:opacity-50"
              >
                {isDeleting ? 'Eliminando...' : 'Eliminar'}
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}